= widgets

== widget, n : a device that is very useful for a particular job

A core component extracted from {RubyTML}[http://rubytml.com], Widgets make it easier for a developer to add internal
domain-specific languages (DSLs) to their application while keeping the DSL code separate from the objects it
manipulates.

"Widgets" is so named because a single Widget would be expected to add a single specific high-level functionality to a
given object or set of objects. For instance, there might exist a "navigate home" widget for a GPS device, which would
be in charge of telling the device where "home" is and other low-level details. The user doesn't want to have to work
with low-level details of the GPS such as longitude and latitude; (s)he simply wants to tell it to "go_home"!

At runtime, all of the widgets contribute their own high-level functionality to produce a very powerful DSL.

Widgets define a set of entry point methods (the "go_home" method, for instance), which are dynamically added to the
objects the widget is designed to affect. This allows you to quickly build a flexible yet powerful Ruby-based DSL for
virtually any environment.

== INCOMPLETE

More documentation, including examples, to come as soon as I get around to writing them.

== Contributing to widgets
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Colin MacKenzie IV. See LICENSE.txt for
further details.

